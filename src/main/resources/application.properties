spring.application.name=livraria

# ? Optimize MySQL Connection for Serverless
spring.datasource.url=jdbc:mysql://mysql.railway.internal:3306/railway?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=uTxGnbCdihoqNEREFctbCFdxbGKLBhUg
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# ? Reduce Hibernate Resource Usage
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true

# ? Reduce Connection Pool to Prevent Unnecessary DB Wake-ups
spring.datasource.hikari.minimum-idle=1   # Keep only 1 idle connection
spring.datasource.hikari.maximum-pool-size=3  # Limit connections to save resources
spring.datasource.hikari.idle-timeout=10000  # Close idle connections fast (10s)
spring.datasource.hikari.max-lifetime=60000  # Recycle connections every 60s
spring.datasource.hikari.connection-timeout=3000  # Fail fast if DB is down

# ? Disable Hibernate Debugging (Prevents Extra Logs & CPU Usage)
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format-sql=false

# ? Optimize API Performance
server.tomcat.max-threads=10  # Prevent excessive threading
server.tomcat.min-spare-threads=2  # Keep only minimal threads when idle

# ? Lazy Initialization (Faster Cold Start)
spring.main.lazy-initialization=true

# ? Reduce Unnecessary Auto Scans
spring.web.resources.add-mappings=false  # Disable static resource mapping if not needed
springdoc.swagger-ui.path=/swagger-ui.html



